<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CMakeRunConfigurationManager" shouldGenerate="true" shouldDeleteObsolete="true">
    <generated>
      <config projectName="scene_retrieving" targetName="NightlyCoverage" />
      <config projectName="scene_retrieving" targetName="Continuous" />
      <config projectName="scene_retrieving" targetName="ExperimentalStart" />
      <config projectName="scene_retrieving" targetName="ExperimentalConfigure" />
      <config projectName="scene_retrieving" targetName="ContinuousBuild" />
      <config projectName="scene_retrieving" targetName="ContinuousSubmit" />
      <config projectName="scene_retrieving" targetName="ExperimentalMemCheck" />
      <config projectName="scene_retrieving" targetName="NightlyMemCheck" />
      <config projectName="scene_retrieving" targetName="demo_mono" />
      <config projectName="scene_retrieving" targetName="NightlyTest" />
      <config projectName="scene_retrieving" targetName="NightlyUpdate" />
      <config projectName="scene_retrieving" targetName="ContinuousUpdate" />
      <config projectName="scene_retrieving" targetName="ContinuousMemCheck" />
      <config projectName="scene_retrieving" targetName="NightlyMemoryCheck" />
      <config projectName="scene_retrieving" targetName="NightlyStart" />
      <config projectName="scene_retrieving" targetName="ContinuousConfigure" />
      <config projectName="scene_retrieving" targetName="ExperimentalBuild" />
      <config projectName="scene_retrieving" targetName="NightlyConfigure" />
      <config projectName="scene_retrieving" targetName="uninstall" />
      <config projectName="scene_retrieving" targetName="ContinuousStart" />
      <config projectName="scene_retrieving" targetName="NightlySubmit" />
      <config projectName="scene_retrieving" targetName="ExperimentalUpdate" />
      <config projectName="scene_retrieving" targetName="scene_retrieve" />
      <config projectName="scene_retrieving" targetName="ExperimentalSubmit" />
      <config projectName="scene_retrieving" targetName="MakeSceneFromOpenSfMModel" />
      <config projectName="scene_retrieving" targetName="ContinuousCoverage" />
      <config projectName="scene_retrieving" targetName="Experimental" />
      <config projectName="scene_retrieving" targetName="ContinuousTest" />
      <config projectName="scene_retrieving" targetName="demo_stereo" />
      <config projectName="scene_retrieving" targetName="ExperimentalTest" />
      <config projectName="scene_retrieving" targetName="Nightly" />
      <config projectName="scene_retrieving" targetName="ExperimentalCoverage" />
      <config projectName="scene_retrieving" targetName="NightlyBuild" />
    </generated>
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug" CONFIG_NAME="Debug" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="4dcb950e-8026-46a0-854e-9fd2e7f1bc02" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/../AHRS/uNavAHRS/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/../AHRS/uNavAHRS/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../AHRS/uNavAHRS/ros_api_main.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../AHRS/uNavAHRS/uNavAHRS.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/../AHRS/uNavAHRS/uNavAHRS.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../AHRS/uNavAHRS/uNavAHRS.h" beforeDir="false" afterPath="$PROJECT_DIR$/../AHRS/uNavAHRS/uNavAHRS.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../GlobalOptimizationGraph/GlobalOptimizationGraph.h" beforeDir="false" afterPath="$PROJECT_DIR$/../GlobalOptimizationGraph/GlobalOptimizationGraph.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../GlobalOptimizationGraph/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/../GlobalOptimizationGraph/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../loop_closing/DBow3/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/../loop_closing/DBow3/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../loop_closing/DBow3/demo/demo.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/../loop_closing/DBow3/demo/demo.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../loop_closing/DBow3/src/LoopClosingManager.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/../loop_closing/DBow3/src/LoopClosingManager.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../loop_closing/DBow3/src/LoopClosingManager.h" beforeDir="false" afterPath="$PROJECT_DIR$/../loop_closing/DBow3/src/LoopClosingManager.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeCache.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeCache.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Makefile.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Makefile.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-log.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-log.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/scene_retrieving.cbp" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/scene_retrieving.cbp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/MakeSceneFromOpenSfMModel.dir/DependInfo.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/MakeSceneFromOpenSfMModel.dir/DependInfo.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/MakeSceneFromOpenSfMModel.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/MakeSceneFromOpenSfMModel.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/MakeSceneFromOpenSfMModel.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/MakeSceneFromOpenSfMModel.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/MakeSceneFromOpenSfMModel.dir/link.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/MakeSceneFromOpenSfMModel.dir/link.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/demo_mono.dir/DependInfo.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/demo_mono.dir/DependInfo.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/demo_mono.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/demo_mono.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/demo_mono.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/demo_mono.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/demo_mono.dir/link.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/demo_mono.dir/link.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/demo_stereo.dir/DependInfo.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/demo_stereo.dir/DependInfo.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/demo_stereo.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/demo_stereo.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/demo_stereo.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/demo_stereo.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/demo_stereo.dir/link.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/demo_stereo.dir/link.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/scene_retrieve.dir/DependInfo.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/scene_retrieve.dir/DependInfo.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/scene_retrieve.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/scene_retrieve.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/scene_retrieve.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/scene_retrieve.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/scene_retrieve.dir/link.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/src/CMakeFiles/scene_retrieve.dir/link.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/src/nlohmann_json/nlohmann_json.cbp" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/src/nlohmann_json/nlohmann_json.cbp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/src/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/MakeSceneEurocStereoVIO_ros.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/MakeSceneEurocStereoVIO_ros.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/MakeSceneFromOpenSfMModel.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/MakeSceneFromOpenSfMModel.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/demo_mono_main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/demo_mono_main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/demo_stereo_main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/demo_stereo_main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/scene_retrieve.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/scene_retrieve.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/scene_retrieve.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/scene_retrieve.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test.scene" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/Thirdparty/DBow3/build/CMakeFiles/loopclosingmanager.dir/src/LoopClosingManager.cpp.o" beforeDir="false" afterPath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/Thirdparty/DBow3/build/CMakeFiles/loopclosingmanager.dir/src/LoopClosingManager.cpp.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/Thirdparty/DBow3/build/src/CMakeFiles/DBoW3.dir/LoopClosingManager.cpp.o" beforeDir="false" afterPath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/Thirdparty/DBow3/build/src/CMakeFiles/DBoW3.dir/LoopClosingManager.cpp.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/Thirdparty/DBow3/build/src/libDBoW3.so.0.0.1" beforeDir="false" afterPath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/Thirdparty/DBow3/build/src/libDBoW3.so.0.0.1" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/Thirdparty/DBow3/src/LoopClosingManager.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/Thirdparty/DBow3/src/LoopClosingManager.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/Thirdparty/DBow3/src/LoopClosingManager.h" beforeDir="false" afterPath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/Thirdparty/DBow3/src/LoopClosingManager.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/cmake-build-debug/CMakeCache.txt" beforeDir="false" afterPath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/cmake-build-debug/CMakeCache.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/cmake-build-debug/CMakeFiles/clion-log.txt" beforeDir="false" afterPath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/cmake-build-debug/CMakeFiles/clion-log.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/common/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/common/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/common/include/ygz/LoopClosingManager.h" beforeDir="false" afterPath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/common/include/ygz/LoopClosingManager.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/common/src/LoopClosingManager.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/common/src/LoopClosingManager.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/cv/src/TrackerLK.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/cv/src/TrackerLK.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/debug.txt" beforeDir="false" afterPath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/debug.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/examples/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/examples/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/examples/simulationCamera.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/examples/simulationCamera.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/slampose.csv" beforeDir="false" afterPath="$PROJECT_DIR$/../../software/SLAM/ygz_slam_ros/slampose.csv" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../software/px4_mavros_scripts/1_px4_mavros_offboard_controller/commander.py" beforeDir="false" afterPath="$PROJECT_DIR$/../../software/px4_mavros_scripts/1_px4_mavros_offboard_controller/commander.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../software/px4_mavros_scripts/1_px4_mavros_offboard_controller/px4_mavros_run.py" beforeDir="false" afterPath="$PROJECT_DIR$/../../software/px4_mavros_scripts/1_px4_mavros_offboard_controller/px4_mavros_run.py" afterDir="false" />
    </list>
    <ignored path="$PROJECT_DIR$/cmake-build-debug/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug" />
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/include/cv_helper.h">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="149">
              <caret line="336" column="41" lean-forward="true" selection-start-line="336" selection-start-column="41" selection-end-line="336" selection-end-column="41" />
              <folding>
                <element signature="e#196#224#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file:///usr/local/include/opencv2/calib3d.hpp">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="310">
              <caret line="738" column="41" selection-start-line="738" selection-start-column="41" selection-end-line="738" selection-end-column="41" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file:///usr/local/include/opencv2/core/mat.hpp">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="310">
              <caret line="413" column="38" selection-start-line="413" selection-start-column="38" selection-end-line="413" selection-end-column="38" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/demo_stereo_main.cpp">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="545">
              <caret line="75" column="9" selection-start-line="75" selection-start-column="9" selection-end-line="75" selection-end-column="9" />
              <folding>
                <element signature="e#73#90#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/MakeSceneFromOpenSfMModel.cpp">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="41">
              <caret line="56" column="35" selection-start-line="56" selection-start-column="35" selection-end-line="56" selection-end-column="35" />
              <folding>
                <element signature="e#40#57#0" expanded="true" />
                <element signature="e#190#217#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/scene_retrieve.h">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="720">
              <caret line="374" column="14" selection-start-line="374" selection-start-column="14" selection-end-line="374" selection-end-column="14" />
              <folding>
                <element signature="e#172#199#0" expanded="true" />
                <element signature="e#302#346#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/scene_retrieve.cpp">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="517">
              <caret line="279" selection-start-line="279" selection-end-line="281" selection-end-column="148" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/../loop_closing/DBow3/src/LoopClosingManager.h">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="22">
              <caret line="61" column="25" selection-start-line="61" selection-start-column="25" selection-end-line="61" selection-end-column="25" />
              <folding>
                <element signature="e#212#239#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/../loop_closing/DBow3/src/LoopClosingManager.cpp">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="1744">
              <caret line="232" column="26" selection-start-line="232" selection-start-column="26" selection-end-line="232" selection-end-column="26" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/../loop_closing/DBow3/src/Database.cpp">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="5274">
              <caret line="293" column="48" selection-start-line="293" selection-start-column="42" selection-end-line="293" selection-end-column="48" />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>match_2_images_flann</find>
      <find>retrieveSceneFromStereoImage</find>
      <find>detectLoopByKeyFrame</find>
      <find>displayFeatureMatches</find>
      <find>ploop_closing_manager_of_scene</find>
      <find>Recovered pts disp</find>
      <find>mpCv_helper</find>
      <find>LKflow detected pt</find>
      <find>InputKeypoints</find>
      <find>image2cam</find>
      <find>PyrLKmatched_points</find>
      <find>descriptors</find>
      <find>matched_points</find>
      <find>conver</find>
      <find>good_matches</find>
      <find>fetchImage</find>
      <find>MapPoints_old</find>
      <find>eigen2cv</find>
      <find>solvePnP</find>
      <find>setImageVecPath</find>
      <find>matches</find>
      <find>StereoImage2MapPoints</find>
      <find>match2Images</find>
      <find>image2KpAndDesp</find>
      <find>image_pts_cur</find>
      <find>intrinstic</find>
      <find>rvec</find>
      <find>queryIdx</find>
      <find>output_points</find>
      <find>mps_old</find>
    </findStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/../.." />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/src/demo_mono_main.cpp" />
        <option value="$PROJECT_DIR$/src/MakeSceneFromOpenSfMModel.cpp" />
        <option value="$PROJECT_DIR$/../loop_closing/DBow3/src/LoopClosingManager.h" />
        <option value="$PROJECT_DIR$/../loop_closing/DBow3/src/LoopClosingManager.cpp" />
        <option value="$PROJECT_DIR$/src/demo_stereo_main.cpp" />
        <option value="$PROJECT_DIR$/src/scene_retrieve.h" />
        <option value="$PROJECT_DIR$/src/scene_retrieve.cpp" />
        <option value="$PROJECT_DIR$/include/cv_helper.h" />
      </list>
    </option>
  </component>
  <component name="OCFindUsagesOptions" text="true" ivars="false" properties="true" derivedClasses="false" />
  <component name="ProjectFrameBounds" extendedState="7">
    <option name="y" value="90" />
    <option name="width" value="1855" />
    <option name="height" value="1084" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="scene_retrieving" type="b2602c69:ProjectViewProjectNode" />
              <item name="scene_retrieving" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="scene_retrieving" type="b2602c69:ProjectViewProjectNode" />
              <item name="scene_retrieving" type="462c0819:PsiDirectoryNode" />
              <item name="config" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="scene_retrieving" type="b2602c69:ProjectViewProjectNode" />
              <item name="scene_retrieving" type="462c0819:PsiDirectoryNode" />
              <item name="include" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="scene_retrieving" type="b2602c69:ProjectViewProjectNode" />
              <item name="scene_retrieving" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="Scope" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Application.demo_mono">
    <configuration name="Continuous" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="Continuous" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousBuild" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="ContinuousBuild" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="scene_retrieving" RUN_TARGET_NAME="ContinuousBuild">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousConfigure" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="ContinuousConfigure" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="scene_retrieving" RUN_TARGET_NAME="ContinuousConfigure">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousCoverage" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="ContinuousCoverage" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="scene_retrieving" RUN_TARGET_NAME="ContinuousCoverage">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousMemCheck" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="ContinuousMemCheck" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="scene_retrieving" RUN_TARGET_NAME="ContinuousMemCheck">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousStart" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="ContinuousStart" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="scene_retrieving" RUN_TARGET_NAME="ContinuousStart">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousSubmit" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="ContinuousSubmit" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="scene_retrieving" RUN_TARGET_NAME="ContinuousSubmit">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousTest" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="ContinuousTest" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="scene_retrieving" RUN_TARGET_NAME="ContinuousTest">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousUpdate" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="ContinuousUpdate" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="scene_retrieving" RUN_TARGET_NAME="ContinuousUpdate">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Experimental" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="Experimental" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalBuild" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="ExperimentalBuild" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="scene_retrieving" RUN_TARGET_NAME="ExperimentalBuild">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalConfigure" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="ExperimentalConfigure" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="scene_retrieving" RUN_TARGET_NAME="ExperimentalConfigure">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalCoverage" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="ExperimentalCoverage" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="scene_retrieving" RUN_TARGET_NAME="ExperimentalCoverage">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalMemCheck" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="ExperimentalMemCheck" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="scene_retrieving" RUN_TARGET_NAME="ExperimentalMemCheck">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalStart" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="ExperimentalStart" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="scene_retrieving" RUN_TARGET_NAME="ExperimentalStart">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalSubmit" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="ExperimentalSubmit" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="scene_retrieving" RUN_TARGET_NAME="ExperimentalSubmit">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalTest" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="ExperimentalTest" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="scene_retrieving" RUN_TARGET_NAME="ExperimentalTest">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalUpdate" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="ExperimentalUpdate" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="scene_retrieving" RUN_TARGET_NAME="ExperimentalUpdate">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="MakeSceneFromOpenSfMModel" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="MakeSceneFromOpenSfMModel" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="scene_retrieving" RUN_TARGET_NAME="MakeSceneFromOpenSfMModel">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Nightly" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="Nightly" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyBuild" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="NightlyBuild" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="scene_retrieving" RUN_TARGET_NAME="NightlyBuild">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyConfigure" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="NightlyConfigure" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="scene_retrieving" RUN_TARGET_NAME="NightlyConfigure">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyCoverage" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="NightlyCoverage" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="scene_retrieving" RUN_TARGET_NAME="NightlyCoverage">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyMemCheck" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="NightlyMemCheck" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="scene_retrieving" RUN_TARGET_NAME="NightlyMemCheck">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyMemoryCheck" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="NightlyMemoryCheck" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="scene_retrieving" RUN_TARGET_NAME="NightlyMemoryCheck">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyStart" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="NightlyStart" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="scene_retrieving" RUN_TARGET_NAME="NightlyStart">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlySubmit" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="NightlySubmit" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="scene_retrieving" RUN_TARGET_NAME="NightlySubmit">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyTest" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="NightlyTest" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="scene_retrieving" RUN_TARGET_NAME="NightlyTest">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyUpdate" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="NightlyUpdate" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="scene_retrieving" RUN_TARGET_NAME="NightlyUpdate">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="demo_mono" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="demo_mono" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="scene_retrieving" RUN_TARGET_NAME="demo_mono">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="demo_stereo" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="demo_stereo" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="scene_retrieving" RUN_TARGET_NAME="demo_stereo">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="scene_retrieve" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="scene_retrieve" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="uninstall" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="scene_retrieving" TARGET_NAME="uninstall" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Application.ContinuousBuild" />
      <item itemvalue="Application.ContinuousConfigure" />
      <item itemvalue="Application.ContinuousCoverage" />
      <item itemvalue="Application.ContinuousMemCheck" />
      <item itemvalue="Application.ContinuousStart" />
      <item itemvalue="Application.ContinuousSubmit" />
      <item itemvalue="Application.ContinuousTest" />
      <item itemvalue="Application.ContinuousUpdate" />
      <item itemvalue="Application.Continuous" />
      <item itemvalue="Application.ExperimentalBuild" />
      <item itemvalue="Application.ExperimentalConfigure" />
      <item itemvalue="Application.ExperimentalCoverage" />
      <item itemvalue="Application.ExperimentalMemCheck" />
      <item itemvalue="Application.ExperimentalStart" />
      <item itemvalue="Application.ExperimentalSubmit" />
      <item itemvalue="Application.ExperimentalTest" />
      <item itemvalue="Application.ExperimentalUpdate" />
      <item itemvalue="Application.Experimental" />
      <item itemvalue="Application.MakeSceneFromOpenSfMModel" />
      <item itemvalue="Application.NightlyBuild" />
      <item itemvalue="Application.NightlyConfigure" />
      <item itemvalue="Application.NightlyCoverage" />
      <item itemvalue="Application.NightlyMemCheck" />
      <item itemvalue="Application.NightlyMemoryCheck" />
      <item itemvalue="Application.NightlyStart" />
      <item itemvalue="Application.NightlySubmit" />
      <item itemvalue="Application.NightlyTest" />
      <item itemvalue="Application.NightlyUpdate" />
      <item itemvalue="Application.Nightly" />
      <item itemvalue="Application.demo_mono" />
      <item itemvalue="Application.demo_stereo" />
      <item itemvalue="Application.scene_retrieve" />
      <item itemvalue="Application.uninstall" />
    </list>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="4dcb950e-8026-46a0-854e-9fd2e7f1bc02" name="Default Changelist" comment="" />
      <created>1552872467733</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1552872467733</updated>
      <workItem from="1552872469172" duration="3636000" />
      <workItem from="1553832442367" duration="17791000" />
      <workItem from="1554083097924" duration="1763000" />
      <workItem from="1554086659863" duration="611000" />
      <workItem from="1554098291962" duration="3052000" />
      <workItem from="1554103701048" duration="8749000" />
      <workItem from="1554172726945" duration="2024000" />
      <workItem from="1554174855194" duration="12668000" />
      <workItem from="1554192527149" duration="1746000" />
      <workItem from="1554201362097" duration="18000" />
      <workItem from="1554201472513" duration="1775000" />
      <workItem from="1554260560466" duration="25967000" />
    </task>
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="79800000" />
  </component>
  <component name="ToolWindowManager">
    <frame x="65" y="-4" width="1855" height="1084" extended-state="7" />
    <editor active="true" />
    <layout>
      <window_info active="true" content_ui="combo" id="Project" order="0" visible="true" weight="0.053067993" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Favorites" order="2" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" />
      <window_info anchor="bottom" id="Run" order="2" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.4" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="bottom" id="Database Changes" order="7" />
      <window_info anchor="bottom" id="Terminal" order="8" />
      <window_info anchor="bottom" id="Event Log" order="9" side_tool="true" />
      <window_info anchor="bottom" id="Version Control" order="10" />
      <window_info anchor="bottom" id="CMake" order="11" weight="0.075235106" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="Database" order="3" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="editorHistoryManager">
    <entry file="file:///usr/include/boost/serialization/split_member.hpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="570">
          <caret line="75" column="8" selection-start-line="75" selection-start-column="8" selection-end-line="75" selection-end-column="8" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/CMakeLists.txt">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/src/demo_mono_main.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="36">
          <caret line="4" column="27" selection-start-line="4" selection-start-column="27" selection-end-line="4" selection-end-column="27" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/include/opencv2/core/ptr.inl.hpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="300">
          <caret line="316" column="7" selection-start-line="316" selection-start-column="7" selection-end-line="316" selection-end-column="7" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/include/eigen3/Eigen/src/Core/Matrix.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="576">
          <caret line="449" column="54" selection-start-line="449" selection-start-column="54" selection-end-line="449" selection-end-column="54" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/include/c++/5/bits/shared_ptr.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="285">
          <caret line="115" column="13" selection-start-line="115" selection-start-column="13" selection-end-line="115" selection-end-column="13" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../loop_closing/DBow3/src/Database.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="5274">
          <caret line="293" column="48" selection-start-line="293" selection-start-column="42" selection-end-line="293" selection-end-column="48" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/include/opencv2/video/tracking.hpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="310">
          <caret line="175" column="18" selection-start-line="175" selection-start-column="18" selection-end-line="175" selection-end-column="18" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/include/opencv2/core/types.hpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="310">
          <caret line="753" column="24" selection-start-line="753" selection-start-column="24" selection-end-line="753" selection-end-column="24" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../loop_closing/DBow3/src/LoopClosingManager.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="22">
          <caret line="61" column="25" selection-start-line="61" selection-start-column="25" selection-end-line="61" selection-end-column="25" />
          <folding>
            <element signature="e#212#239#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../loop_closing/DBow3/src/LoopClosingManager.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1744">
          <caret line="232" column="26" selection-start-line="232" selection-start-column="26" selection-end-line="232" selection-end-column="26" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/demo_stereo_main.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="545">
          <caret line="75" column="9" selection-start-line="75" selection-start-column="9" selection-end-line="75" selection-end-column="9" />
          <folding>
            <element signature="e#73#90#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/MakeSceneFromOpenSfMModel.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="41">
          <caret line="56" column="35" selection-start-line="56" selection-start-column="35" selection-end-line="56" selection-end-column="35" />
          <folding>
            <element signature="e#40#57#0" expanded="true" />
            <element signature="e#190#217#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/include/opencv2/core/mat.hpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="310">
          <caret line="413" column="38" selection-start-line="413" selection-start-column="38" selection-end-line="413" selection-end-column="38" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/include/opencv2/calib3d.hpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="310">
          <caret line="738" column="41" selection-start-line="738" selection-start-column="41" selection-end-line="738" selection-end-column="41" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/scene_retrieve.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="720">
          <caret line="374" column="14" selection-start-line="374" selection-start-column="14" selection-end-line="374" selection-end-column="14" />
          <folding>
            <element signature="e#172#199#0" expanded="true" />
            <element signature="e#302#346#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/scene_retrieve.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="517">
          <caret line="279" selection-start-line="279" selection-end-line="281" selection-end-column="148" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/include/cv_helper.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="149">
          <caret line="336" column="41" lean-forward="true" selection-start-line="336" selection-start-column="41" selection-end-line="336" selection-end-column="41" />
          <folding>
            <element signature="e#196#224#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
  </component>
</project>